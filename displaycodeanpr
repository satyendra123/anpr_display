import mysql.connector
import serial
from time import sleep
import threading

ser = serial.Serial('COM7', baudrate=9600, timeout=0.1)

db_config = {'host': 'localhost', 'user': 'root', 'password': '', 'database': 'paytm_park'}

def create_db_connection():
    return mysql.connector.connect(**db_config)

def send_welcome_message_to_display():
    welcome_message_1 = '|C|1|4|1|12-6-#GWELCOME|\r\n'
    print(f"Sending welcome message to display 1: {welcome_message_1}")
    ser.write(welcome_message_1.encode('ascii'))
    ser.flush()
    sleep(0.1)

def send_data_to_exit_display(veh_number, price):
    clear_display_message_1 = '|C|1|6|\r\n'
    clear_display_message_2 = '|C|2|6|\r\n'

    ser.write(clear_display_message_1.encode('ascii'))
    ser.flush()
    sleep(0.1)
    ser.write(clear_display_message_2.encode('ascii'))
    ser.flush()
    sleep(0.1)

    car_number_message = f'|C|1|4|1|1-1-#G{veh_number}|\r\n'
    ser.write(car_number_message.encode('ascii'))
    ser.flush()
    sleep(0.1)

    price_message = f'|C|2|4|1|10-0-#GRS-{price}|\r\n'
    ser.write(price_message.encode('ascii'))
    ser.flush()
    sleep(5)

    print("Clearing displays again.")
    ser.write(clear_display_message_1.encode('ascii'))
    ser.flush()
    sleep(0.1)
    ser.write(clear_display_message_2.encode('ascii'))
    ser.flush()
    sleep(0.1)

def send_data_to_entry_display(veh_number):
    clear_display_message_1 = '|C|1|6|\r\n'
    clear_display_message_2 = '|C|2|6|\r\n'

    ser.write(clear_display_message_1.encode('ascii'))
    ser.flush()
    sleep(0.1)
    ser.write(clear_display_message_2.encode('ascii'))
    ser.flush()
    sleep(0.1)

    car_number_message = f'|C|1|4|1|1-1-#G{veh_number}|\r\n'
    ser.write(car_number_message.encode('ascii'))
    ser.flush()
    sleep(3)

    print("Clearing displays again.")
    ser.write(clear_display_message_1.encode('ascii'))
    ser.flush()
    sleep(0.1)
    ser.write(clear_display_message_2.encode('ascii'))
    ser.flush()
    sleep(0.1)

def fetch_data(display_name):
    display_id = 1 if display_name.upper() == 'ENTRY' else 2

    while True:
        conn = create_db_connection()
        cursor = conn.cursor(dictionary=True)
        try:
            select_query = "SELECT id, car_number, tarif_amount FROM display_response WHERE shown_on_screen = 1 AND display_id = %s"
            cursor.execute(select_query, (display_id,))
            result = cursor.fetchone()
            if result:
                print(f"[{display_name}] Fetched Data: {result}")
                car = result['car_number']

                if display_name.upper() == 'ENTRY':
                    send_data_to_entry_display(car)
                    send_welcome_message_to_display()

                elif display_name.upper() == 'EXIT':
                    tarif = int(result['tarif_amount'])
                    send_data_to_exit_display(car, tarif)
                    send_welcome_message_to_display()

                update_query = "UPDATE display_response SET shown_on_screen = 0 WHERE id = %s"
                cursor.execute(update_query, (result['id'],))
                conn.commit()

                cursor.execute("SELECT id, shown_on_screen FROM display_response WHERE id = %s", (result['id'],))
                updated_result = cursor.fetchone()
                print(f"Confirmed Status After Update: {updated_result}")
            else:
                print(f"[{display_name}] No row found. Waiting...")
        except mysql.connector.Error as err:
            print(f"[{display_name}] Database error: {err}")
        finally:
            cursor.close()
            conn.close()
        sleep(5)

entry_thread = threading.Thread(target=fetch_data, args=('ENTRY',))
exit_thread = threading.Thread(target=fetch_data, args=('EXIT',))

entry_thread.start()
sleep(1)
exit_thread.start()

entry_thread.join()
exit_thread.join()
